[metadata]
name = neurospin_to_bids
author = Isabelle Denghien
author_email = isabelle.denghien@cea.fr
description = Tool for exporting imaging data from the NeuroSpin archive in BIDS format
long_description = file: README.md
long_description_content_type = text/markdown
url = https://github.com/neurospin/neurospin_to_bids
classifiers =
    Environment :: Console
    Intended Audience :: Science/Research
    Operating System :: POSIX
    Programming Language :: Python :: 3
    Topic :: Scientific/Engineering :: Bio-Informatics
    Topic :: Scientific/Engineering :: Medical Science Apps.

[options]
packages = find:
package_dir=
    =src
python_requires = ~=3.8
install_requires =
    bids-validator
    logutils
    mne-bids
    pandas
    pydeface
    pydicom
    PyYAML
    setuptools  # actually a dependency of pydeface (for pkg_resources)
    numpy >= 1.25 ; python_version >= "3.12"  # NumPy 1.24 crashes at build-time on recent Pythons

[options.packages.find]
where = src

[options.extras_require]
dev =
    pre-commit
    pip-tools
    pytest
    pytest-cov
    tox >= 4.4.0

[options.entry_points]
console_scripts =
    # We cannot keep the legacy name neurospin_to_bids.py because that leads to
    # a name conflict with the neurospin_to_bids package (ModuleNotFoundError:
    # No module named 'neurospin_to_bids.__main__'; 'neurospin_to_bids' is not
    # a package).
    neurospin_to_bids=neurospin_to_bids.__main__:main

[options.package_data]
neurospin_to_bids =
    template_deface/*.nii.gz

[flake8]
ignore =
    # E203 (whitespace before ':') has false positive for array slicings
    E203,
    # these are on the default ignore list
    E121, E126, E226, E133, E203, E241,
    # We want line-break *before* the operator (new PEP8 style similar to math)
    W503,
    # Gives false positives when a name contains an uppercase acronym
    N802

[coverage:run]
source = neurospin_to_bids
branch = True

[coverage:report]
# Regexes for lines to exclude from consideration
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover

    # Don't complain about missing debug-only code:
    def __repr__
    if self\.debug

    # Don't complain if tests don't hit defensive assertion code:
    raise AssertionError
    raise NotImplementedError

    # Don't complain if non-runnable code isn't run:
    if 0:
    if __name__ == .__main__.:

[codespell]
skip = .tox
