# tox (https://tox.readthedocs.io/) is a tool for running tests
# in multiple virtualenvs. This configuration file will run the
# test suite on all supported python versions. To use it, "pip install tox"
# and then run "tox" from this directory.


# Python 3.6 was the version deployed on Ubuntu 18.04
# Python 3.8 is the version deployed on Ubuntu 20.04 servers such as triscotte
# Python 3.10 is the version deployed on the Ubuntu 22.04 master
[tox]
envlist = py, cov, codestyle

[gh-actions]
python =
    3.8: py38, cov
    3.10: py310, codestyle

[testenv]
deps =
    pip-tools
    -crequirements/production.txt
    -crequirements/test.txt
# 'python -m piptools sync' guarantees that the test environment only contains
# pinned dependencies (it will uninstall dependencies that are not in
# requirements/*.txt). We have to fisrt install pip-tools, then use it to
# install the dependencies, and finally install the neurospin-to-bids package.
# Passing multiple commands as part of install_command does not seem to work,
# neither does substitution of {opts} and {packages}, so I had to resort to an
# ugly hack using sh -c... (YL 2025-03-05 using tox 4.24.1)
allowlist_externals = sh
install_command =
    sh -c 'python -I -m pip install pip-tools && python -m piptools sync requirements/production.txt requirements/test.txt && python -I -m pip install "$@"' -
commands = pytest {posargs}

[testenv:cov]
commands = pytest --cov --cov-config=setup.cfg \
                  --cov-report=term --cov-report=xml {posargs}
deps =
    {[testenv]deps}
    pytest-cov

[testenv:codestyle]
# pre-commit needs to clone Git repositories over https
passenv = http_proxy,https_proxy,no_proxy
commands_pre =  # do not inherit the piptools command
commands = pre-commit run --all-files
deps =
    pre-commit
